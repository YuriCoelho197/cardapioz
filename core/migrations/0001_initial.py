# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-06-10 00:40
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=30, verbose_name='nome')),
                ('last_name', models.CharField(max_length=30, verbose_name='sobrenome')),
                ('email', models.EmailField(error_messages={'unique': 'este email já está em uso.'}, max_length=255, unique=True, verbose_name='email')),
                ('username', models.CharField(blank=True, error_messages={'unique': 'este nome de usuario já esta em uso'}, help_text='Não pode conter caracteres especiais.', max_length=30, null=True, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$', 32), 'Digite um nome valido.', 'invalid')], verbose_name='username')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de criação')),
                ('is_staff', models.BooleanField(default=False, help_text='Define se é admin.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Define se o usuario está ativo.', verbose_name='Email ativado')),
                ('is_pass', models.BooleanField(default=False, help_text='Possui senha', verbose_name='Cadastrou senha? ')),
                ('hash_pass', models.CharField(blank=True, max_length=56, null=True, verbose_name='Hash para criar senha')),
                ('is_trusty', models.BooleanField(default=False, help_text='Define se a conta é ativada.', verbose_name='Conta Ativa')),
                ('sexo', models.BooleanField(choices=[(0, 'Masculino'), (1, 'Feminino')], default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='ft_users')),
                ('first_login', models.BooleanField(default=False, help_text='Usado para mostrar o código do usuario', verbose_name='Primeiro login')),
                ('type_user', models.BooleanField(default=False, help_text='define se é empresa ou usuario normal', verbose_name='empresa')),
                ('reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cadastrado por')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
